<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mlorenzo</groupId>
  <artifactId>amigos-services</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>amigos-services</name>

  <modules>
    <module>customer-service</module>
    <module>fraud-check-service</module>
    <module>notification-service</module>
    <module>eureka-server</module>
    <module>api-gateway</module>
    <module>clients</module>
    <module>amqp</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <spring.boot.dependencies.version>2.5.7</spring.boot.dependencies.version>
    <spring.boot.maven.plugin.version>2.5.7</spring.boot.maven.plugin.version>
    <spring-cloud.version>2020.0.3</spring-cloud.version>
    <image>manulc/${project.artifactId}:${project.version}</image>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.dependencies.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.maven.plugin.version}</version>
          <!-- Ejecuta el goal "repackage" de este plugin, que está asociado a la fase "package" de Maven,
               generando un Fat JAR. La fase "package" de Maven genera el Jar original(el normal) y el goal "repackage"
               de este plugin renombra la extensión de ese Jar original por ".jar.original" y genera un Fat Jar con
               todas las depedencias del proyecto. -->
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>3.1.4</version>
          <configuration>
            <from>
              <image>eclipse-temurin:17-jre-alpine@sha256:cba04f7101096852719a1530feffbb04a232765a8180b083f6182bafc6b3e1d3</image>
            </from>
            <to>
              <tags>
                <tag>latest</tag>
              </tags>
            </to>
          </configuration>
          <!-- Ejecutamos este goal cuando se lance la fase "package" de Maven -->
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <!-- Este goal crea la imagen, la sube al repositorio remoto y la elimina localmente -->
                <!--<goal>build</goal>-->
                <!-- Este goal únicamente crea la imagen localmente -->
                <goal>dockerBuild</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
